

macro(file_dump_variable out_file_path printed_name variable_name)
    list(LENGTH ${variable_name} variable_length)
    if(${variable_length} GREATER 1)
        file(APPEND ${out_file_path} "${printed_name}=\n")
        foreach(variable_line ${${variable_name}})
            file(APPEND ${out_file_path} "    ${variable_line}\n")
        endforeach()
    else()
        file(APPEND ${out_file_path} "${printed_name}=${${variable_name}}\n")
    endif()
endmacro()

macro(file_dump_all_variables out_file_path)
    get_cmake_property(all_variable_names VARIABLES)
    file(WRITE ${out_file_path})
    foreach(it_variable_name ${all_variable_names})
        file_dump_variable(${out_file_path} ${it_variable_name} ${it_variable_name})
    endforeach()
endmacro()

macro(get_target_property_or_empty out_var target_name property_name)
    get_target_property("${out_var}" "${target_name}" "${property_name}")
    if("${${out_var}}" STREQUAL "${out_var}-NOTFOUND")
        set(${out_var})
    endif()
endmacro()

function(set_target_custom_property target_name property_name property_value)
    #[[get_target_property(X ${target_name} RTD_custom_property_list)
    if("${X}" STREQUAL "X-NOTFOUND")
        set(X)
    endif()]]
    get_target_property_or_empty(X ${target_name} RTD_custom_property_list)    
    set(X RTD_custom_property_list ${X} ${property_name})
    list(REMOVE_DUPLICATES X)
    set_target_properties(${target_name} PROPERTIES RTD_custom_property_list "${X}")
    set_target_properties(${target_name} PROPERTIES "${property_name}" "${property_value}")
endfunction()

# Ripped off from https://stackoverflow.com/questions/32183975/how-to-print-all-the-properties-of-a-target-in-cmake/56738858#56738858
execute_process(COMMAND cmake --help-property-list OUTPUT_VARIABLE RTD_CMake_target_property_list)
STRING(REGEX REPLACE ";" "\\\\;" RTD_CMake_target_property_list "${RTD_CMake_target_property_list}")
STRING(REGEX REPLACE "\n" ";" RTD_CMake_target_property_list "${RTD_CMake_target_property_list}")
list(FILTER RTD_CMake_target_property_list EXCLUDE REGEX ".*LOCATION")
list(REMOVE_DUPLICATES RTD_CMake_target_property_list)

function(file_dump_target_properties target_name out_file_path)
    if(NOT TARGET ${target_name})
        message("There is no target named '${target_name}'")
        return()
    endif()

    file(WRITE ${out_file_path})
    get_target_property_or_empty(custom_list ${target_name} RTD_custom_property_list)
    foreach (property_name ${RTD_CMake_target_property_list} ${custom_list})
        string(REPLACE "<CONFIG>" "${CMAKE_BUILD_TYPE}" property_name ${property_name})
        get_target_property(property_value ${target_name} ${property_name})
        if (property_value)
            file_dump_variable(${out_file_path} ${property_name} property_value)
        endif()
    endforeach()
endfunction()


function(get_target_inherited_property out_variable_name tgt tgt_list_name property_name)
    set(out_variable)
    get_target_inherited_property_impl(${tgt} ${tgt_list_name} ${property_name})
    set(${out_variable_name} ${out_variable} PARENT_SCOPE)
endfunction()

function(get_target_self_and_inherited_property out_variable_name tgt tgt_list_name property_name)    
    get_target_property_or_empty(self_value ${tgt} ${property_name})
    get_target_inherited_property(inherited_value ${tgt} ${tgt_list_name} "INTERFACE_${property_name}")
    set(result ${self_value} ${inherited_value})
    set(${out_variable_name} "${result}" PARENT_SCOPE)
endfunction()

macro(get_target_inherited_property_impl tgt tgt_list_name property_name)
    get_target_property_or_empty(libraries ${tgt} LINK_LIBRARIES)
    
    foreach(it_lib ${libraries})
        if(TARGET ${it_lib})
            get_target_property_or_empty(property_value ${it_lib} ${property_name})            
            set(out_variable ${out_variable} ${property_value})
            if((${it_lib} IN_LIST ${tgt_list_name}) AND (TARGET ${it_lib}))
                get_target_inherited_property_impl(${it_lib} ${tgt_list_name} ${property_name})
            endif()
        endif()
    endforeach()
endmacro()

